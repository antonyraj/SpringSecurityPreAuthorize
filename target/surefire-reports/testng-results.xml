<testng-results>
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="663" started-at="2013-03-22T16:08:57Z" finished-at="2013-03-22T16:08:58Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="663" started-at="2013-03-22T16:08:57Z" finished-at="2013-03-22T16:08:58Z">
      <class name="com.poc.preauthorize.AuthenticationListenerTest">
        <test-method status="PASS" signature="testAuthenticatedMethod()" name="testAuthenticatedMethod" duration-ms="6" started-at="2013-03-22T16:08:57Z" finished-at="2013-03-22T16:08:57Z">
        </test-method>
        <test-method status="PASS" signature="testAuthenticatedMethodWithDuplicateRoles()" name="testAuthenticatedMethodWithDuplicateRoles" duration-ms="0" started-at="2013-03-22T16:08:57Z" finished-at="2013-03-22T16:08:57Z">
        </test-method>
        <test-method status="PASS" signature="testAuthenticatedMethodWithManyRoles()" name="testAuthenticatedMethodWithManyRoles" duration-ms="0" started-at="2013-03-22T16:08:57Z" finished-at="2013-03-22T16:08:57Z">
        </test-method>
        <test-method status="PASS" signature="testMissingRoles()" name="testMissingRoles" duration-ms="0" started-at="2013-03-22T16:08:57Z" finished-at="2013-03-22T16:08:57Z">
        </test-method>
        <test-method status="PASS" signature="testMissingUsername()" name="testMissingUsername" duration-ms="1" started-at="2013-03-22T16:08:57Z" finished-at="2013-03-22T16:08:57Z">
        </test-method>
        <test-method status="PASS" signature="testNotAuthenticatedMethod()" name="testNotAuthenticatedMethod" duration-ms="0" started-at="2013-03-22T16:08:57Z" finished-at="2013-03-22T16:08:57Z">
        </test-method>
      </class>
      <class name="com.poc.preauthorize.MyServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2013-03-22T16:08:57Z" finished-at="2013-03-22T16:08:57Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="612" started-at="2013-03-22T16:08:57Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2013-03-22T16:08:58Z">
        </test-method>
        <test-method status="PASS" signature="testCallByeAsAdmin()" name="testCallByeAsAdmin" duration-ms="23" started-at="2013-03-22T16:08:58Z" finished-at="2013-03-22T16:08:58Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2013-03-22T16:08:58Z" finished-at="2013-03-22T16:08:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.poc.preauthorize.MyServiceTest.testCallByeAsAdmin()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2013-03-22T16:08:58Z" finished-at="2013-03-22T16:08:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.poc.preauthorize.MyServiceTest.testCallByeAsAdmin()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2013-03-22T16:08:58Z" finished-at="2013-03-22T16:08:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.poc.preauthorize.MyServiceTest.testCallByeAsUser()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCallByeAsUser()" name="testCallByeAsUser" duration-ms="1" started-at="2013-03-22T16:08:58Z" finished-at="2013-03-22T16:08:58Z">
          <exception class="org.springframework.security.access.AccessDeniedException">
            <message>
              <![CDATA[Access is denied]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.security.access.AccessDeniedException: Access is denied
	at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:71)
	at org.springframework.security.access.intercept.AbstractSecurityInterceptor.beforeInvocation(AbstractSecurityInterceptor.java:203)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy20.bye(Unknown Source)
	at com.poc.preauthorize.MyServiceTest.testCallByeAsUser(MyServiceTest.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:73)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:173)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:186)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:660)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:840)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1141)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:135)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:119)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1108)
	at org.testng.TestRunner.privateRun(TestRunner.java:737)
	at org.testng.TestRunner.run(TestRunner.java:596)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:315)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:310)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:272)
	at org.testng.SuiteRunner.run(SuiteRunner.java:221)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:946)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:883)
	at org.testng.TestNG.run(TestNG.java:814)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:61)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:163)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:112)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at $Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:145)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2013-03-22T16:08:58Z" finished-at="2013-03-22T16:08:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.poc.preauthorize.MyServiceTest.testCallByeAsUser()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCallHelloAsAdmin()" name="testCallHelloAsAdmin" duration-ms="2" started-at="2013-03-22T16:08:58Z" finished-at="2013-03-22T16:08:58Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2013-03-22T16:08:58Z" finished-at="2013-03-22T16:08:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.poc.preauthorize.MyServiceTest.testCallHelloAsAdmin()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2013-03-22T16:08:58Z" finished-at="2013-03-22T16:08:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.poc.preauthorize.MyServiceTest.testCallHelloAsAdmin()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2013-03-22T16:08:58Z" finished-at="2013-03-22T16:08:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.poc.preauthorize.MyServiceTest.testCallHelloAsUser()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2013-03-22T16:08:58Z" finished-at="2013-03-22T16:08:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.poc.preauthorize.MyServiceTest.testCallHelloAsUser()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCallHelloAsUser()" name="testCallHelloAsUser" duration-ms="0" started-at="2013-03-22T16:08:58Z" finished-at="2013-03-22T16:08:58Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestClass()" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2013-03-22T16:08:58Z" finished-at="2013-03-22T16:08:58Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
